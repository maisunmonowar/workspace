/*M///////////////////////////////////////////////////////////////////////////////////////
//
//  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
//
//  By downloading, copying, installing or using the software you agree to this license.
//  If you do not agree to this license, do not download, install,
//  copy or use the software.
//
//
//                          License Agreement
//                For Open Source Computer Vision Library
//
// Copyright (C) 2000-2008, Intel Corporation, all rights reserved.
// Copyright (C) 2009, Willow Garage Inc., all rights reserved.
// Third party copyrights are property of their respective owners.
//
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//
//   * Redistribution's of source code must retain the above copyright notice,
//     this list of conditions and the following disclaimer.
//
//   * Redistribution's in binary form must reproduce the above copyright notice,
//     this list of conditions and the following disclaimer in the documentation
//     and/or other materials provided with the distribution.
//
//   * The name of the copyright holders may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
//
// This software is provided by the copyright holders and contributors "as is" and
// any express or implied warranties, including, but not limited to, the implied
// warranties of merchantability and fitness for a particular purpose are disclaimed.
// In no event shall the Intel Corporation or contributors be liable for any direct,
// indirect, incidental, special, exemplary, or consequential damages
// (including, but not limited to, procurement of substitute goods or services;
// loss of use, data, or profits; or business interruption) however caused
// and on any theory of liability, whether in contract, strict liability,
// or tort (including negligence or otherwise) arising in any way out of
// the use of this software, even if advised of the possibility of such damage.
//
//M*/
#include <iostream>
#include <fstream>
#include "opencv2/highgui/highgui.hpp"
#include <opencv2/imgproc/imgproc.hpp>
#include "opencv2/stitching/stitcher.hpp"
using namespace std;
using namespace cv;
vector<Mat> imgs;
string result_name = "result.jpg";
int main(int argc, char* argv[])
{
	//imgs.push_back(imread("/home/maisun/workspace/workspace/stitch_t2/Debug/image/image_003.jpg"));
	//imgs.push_back(imread("/home/maisun/workspace/workspace/stitch_t2/Debug/image/image_002.jpg"));
	////
	for (int a=0; a<14;a++)  // a <=Count would do one too many...
	{
	    string name = format("/home/maisun/workspace/workspace/stitch_t2/Debug/image/image_00%d.jpg", a);
	    Mat img = imread(name); // pgm implies grayscale, maybe even: imread(name,0); to return CV_8U
	    if ( img.empty() )      // please, *always check* resource-loading.
	    {
	        cerr << "whaa " << name << " can't be loaded!" << endl;
	        continue;
	    }
	    imgs.push_back(img);

	}
	///////////////////
	Mat pano;
	Stitcher stitcher = Stitcher::createDefault(false);
	Stitcher::Status status = stitcher.stitch(imgs, pano);
	imwrite(result_name, pano);
    return 0;
}
